{
	"info": {
		"_postman_id": "c5cfcac6-eae3-4b76-813f-9088ea3a7e47",
		"name": "go-echo-boilerplate",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11858096"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const req = JSON.parse(pm.request.body.raw);\r",
									"console.log(req)\r",
									"const params = [\"Phone\", \"Password\"]\r",
									"\r",
									"for(item of params) {\r",
									"    if(!(item in req)){\r",
									"        throw new Error(`Missing ${item} field in the request body!`);\r",
									"    }\r",
									"\r",
									"    if(!req[item]) {\r",
									"        throw new Error(`${item} field in the request body, cant be empty!`);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", response.Data[0].token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Phone\": \"+123456789\",\r\n    \"Password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Phone\": \"+123456789\",\r\n    \"Password\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "BackupPwd",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const req = JSON.parse(pm.request.body.raw);\r",
									"console.log(req)\r",
									"const params = [\"Phone\", \"Password\", \"NewPassword\"]\r",
									"\r",
									"for(item of params) {\r",
									"    if(!(item in req)){\r",
									"        throw new Error(`Missing ${item} field in the request body!`);\r",
									"    }\r",
									"\r",
									"    if(!req[item]) {\r",
									"        throw new Error(`${item} field in the request body, cant be empty!`);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Phone\": \"+123456789\",\r\n    \"Password\": \"123\",\r\n    \"NewPassword\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/backup/pwd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"backup",
								"pwd"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckPhone",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const req = JSON.parse(pm.request.body.raw);\r",
									"console.log(req)\r",
									"const params = [\"Phone\"]\r",
									"\r",
									"for(item of params) {\r",
									"    if(!(item in req)){\r",
									"        throw new Error(`Missing ${item} field in the request body!`);\r",
									"    }\r",
									"\r",
									"    if(!req[item]) {\r",
									"        throw new Error(`${item} field in the request body, cant be empty!`);\r",
									"    }\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Phone\": \"+123456789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/check/phone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"check",
								"phone"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "blogs",
			"item": [
				{
					"name": "All blogs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/blogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blogs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create blog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"Title\": \"test\",\r\n    \"Content\": \"qwertyuiop\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/blog",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"blog"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:1200/api/v0",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}